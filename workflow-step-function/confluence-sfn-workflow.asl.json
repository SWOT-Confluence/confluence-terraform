{
    "Comment": "Confluence Workflow",
    "StartAt": "Enable Renew",
    "States": {
        "Enable Renew": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
            "OutputPath": "$",
            "ResultPath": "$.enable_renew",
            "Parameters": {
                "FunctionName": "arn:aws:lambda:${aws_region}:${account_id}:function:${prefix}-enable-renew:$LATEST",
                "Payload": {
                    "token.$": "$$.Task.Token"
                }
            },
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 2,
                    "BackoffRate": 2
                }
            ],
            "TimeoutSeconds": 600,
            "Next": "Datagen"
        },
        "Datagen": {
            "Type": "Map",
            "ItemSelector": {
                "context_index.$": "$$.Map.Item.Index",
                "context_value.$": "$$.Map.Item.Value",
                "collection.$": "$.collection",
                "start_time.$": "$.start_time",
                "end_time.$": "$.end_time",
                "reach_subset_file.$": "$.reach_subset_file",
                "version.$": "$.version"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Batch SubmitJob",
                "States": {
                    "Batch SubmitJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "Parameters": {
                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-datagen",
                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-datagen",
                            "PropagateTags": true,
                            "ContainerOverrides": {
                                "Command": [
                                    "-c",
                                    "river",
                                    "-i",
                                    "Ref::index",
                                    "-p",
                                    "POCLOUD",
                                    "-s",
                                    "Ref::collection",
                                    "-t",
                                    "Ref::datequery",
                                    "-d",
                                    "/data",
                                    "-k",
                                    "${ssm_key_id}",
                                    "-u",
                                    "Ref::reachsubsetfile",
                                    "-b",
                                    "-w", 
                                    "/data/sword_patches_v215.json"
                                ]
                            },
                            "JobName.$": "States.Format('confluence-datagen-{}-{}', $.Items[0].version, $.Items[0].context_index)",
                            "Parameters": {
                                "collection.$": "$.Items[0].collection",
                                "datequery.$": "States.Format('{},{}', $.Items[0].start_time, $.Items[0].end_time)",
                                "reachsubsetfile.$": "States.Format('/data/{}', $.Items[0].reach_subset_file)",
                                "index.$": "States.Format('{}', $.Items[0].context_index)"
                            }
                        },
                        "End": true
                    }
                }
            },
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "JSON"
                },
                "Parameters": {
                    "Bucket": "${prefix}-json",
                    "Key": "continent-datagen.json"
                }
            },
            "MaxConcurrency": 10,
            "Label": "datagen",
            "ItemBatcher": {
                "MaxInputBytesPerBatch": 131072,
                "MaxItemsPerBatch": 1
            },
            "Next": "Combine Data"
        },
        "Combine Data": {
            "Type": "Task",
            "Resource": "arn:aws:states:::batch:submitJob.sync",
            "OutputPath": "$",
            "ResultPath": "$.combine_data",
            "Parameters": {
                "JobName": "combine_data",
                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-combine-data",
                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-combine-data",
                "PropagateTags": true,
                "ContainerOverrides": {
                    "Command": [
                        "-c",
                        "continent.json",
                        "-d",
                        "/data",
                        "-u",
                        "${prefix}-json"
                    ]
                }
            },
            "Next": "Input"
        },
        "Input": {
            "Type": "Map",
            "ItemSelector": {
                "context_index.$": "$$.Map.Item.Index",
                "context_value.$": "$$.Map.Item.Value",
                "version.$": "$.version"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Batch SubmitJob",
                "States": {
                    "Batch SubmitJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "Parameters": {
                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-input",
                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-input",
                            "PropagateTags": true,
                            "ContainerOverrides": {
                                "Command": [
                                    "-c",
                                    "river",
                                    "-i",
                                    "Ref::index",
                                    "-r",
                                    "/mnt/data/reach_node.json",
                                    "-p",
                                    "/mnt/data/cycle_passes.json",
                                    "-s",
                                    "/mnt/data/s3_list.json",
                                    "-e",
                                    "/mnt/data/s3_reach.json",
                                    "-d",
                                    "/mnt/data/swot"
                                ]
                            },
                            "JobName.$": "States.Format('confluence-input-{}-{}',$.Items[0].version, $.Items[0].context_value.reach_id)",
                            "Parameters": {
                                "index.$": "States.Format('{}',$.Items[0].context_index)"
                            }
                        },
                        "End": true
                    }
                }
            },
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "JSON"
                },
                "Parameters": {
                    "Bucket": "${prefix}-json",
                    "Key": "reaches.json"
                }
            },
            "MaxConcurrency": 10,
            "Label": "input",
            "ItemBatcher": {
                "MaxInputBytesPerBatch": 131072,
                "MaxItemsPerBatch": 1
            },
            "Next": "Disable Renew"
        },
        "Disable Renew": {
            "Type": "Task",
            "Resource": "arn:aws:states:::batch:submitJob.sync",
            "OutputPath": "$",
            "ResultPath": "$.disable_renew",
            "Parameters": {
                "JobName": "confluence-dev1-disable-renew",
                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-disable_renew",
                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-disable_renew",
                "PropagateTags": true
            },
            "Next": "Prediagnostics"
        },
        "Prediagnostics": {
            "Type": "Map",
            "ItemSelector": {
                "context_index.$": "$$.Map.Item.Index",
                "context_value.$": "$$.Map.Item.Value",
                "version.$": "$.version"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Batch SubmitJob",
                "States": {
                    "Batch SubmitJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "Parameters": {
                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-prediagnostics",
                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-prediagnostics",
                            "PropagateTags": true,
                            "ContainerOverrides": {
                                "Command": [
                                    "Ref::index",
                                    "reaches.json"
                                ]
                            },
                            "JobName.$": "States.Format('confluence-input-{}-{}',$.Items[0].version, $.Items[0].context_value.reach_id)",
                            "Parameters": {
                                "index.$": "States.Format('{}',$.Items[0].context_index)"
                            }
                        },
                        "End": true
                    }
                }
            },
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "JSON"
                },
                "Parameters": {
                    "Bucket": "${prefix}-json",
                    "Key": "reaches.json"
                }
            },
            "MaxConcurrency": 10,
            "Label": "prediagnostics",
            "ItemBatcher": {
                "MaxInputBytesPerBatch": 131072,
                "MaxItemsPerBatch": 1
            },
            "Next": "Priors Choice"
        },
        "Priors Choice": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.run_type",
                    "StringEquals": "constrained",
                    "Next": "Priors Constrained"
                },
                {
                    "Variable": "$.run_type",
                    "StringEquals": "unconstrained",
                    "Next": "Priors Unconstrained"
                }
            ]
        },
        "Priors Constrained": {
            "Type": "Map",
            "ItemSelector": {
                "context_index.$": "$$.Map.Item.Index",
                "context_value.$": "$$.Map.Item.Value",
                "version.$": "$.version"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Batch SubmitJob",
                "States": {
                    "Batch SubmitJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "Parameters": {
                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-priors",
                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-priors",
                            "PropagateTags": true,
                            "ContainerOverrides": {
                                "Command": [
                                    "-i",
                                    "Ref::index",
                                    "-r",
                                    "constrained",
                                    "-p",
                                    "usgs",
                                    "riggs",
                                    "gbpriors",
                                    "-g"
                                ]
                            },
                            "JobName.$": "States.Format('confluence-priors-constrained-{}-{}',$.Items[0].version, $.Items[0].context_value.reach_id)",
                            "Parameters": {
                                "index.$": "States.Format('{}',$.Items[0].context_index)"
                            }
                        },
                        "End": true
                    }
                }
            },
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "JSON"
                },
                "Parameters": {
                    "Bucket": "${prefix}-json",
                    "Key": "continent.json"
                }
            },
            "MaxConcurrency": 10,
            "Label": "priorsConstrained",
            "ItemBatcher": {
                "MaxInputBytesPerBatch": 131072,
                "MaxItemsPerBatch": 1
            },
            "Next": "FLPE"
        },
        "Priors Unconstrained": {
            "Type": "Map",
            "ItemSelector": {
                "context_index.$": "$$.Map.Item.Index",
                "context_value.$": "$$.Map.Item.Value",
                "version.$": "$.version"
            },
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Batch SubmitJob",
                "States": {
                    "Batch SubmitJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                        "Parameters": {
                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-priors",
                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-priors",
                            "PropagateTags": true,
                            "ContainerOverrides": {
                                "Command": [
                                    "-i",
                                    "Ref::index",
                                    "-r",
                                    "unconstrained",
                                    "-p",
                                    "usgs",
                                    "riggs",
                                    "gbpriors",
                                    "-g"
                                ]
                            },
                            "JobName.$": "States.Format('confluence-priors-unconstrained-{}-{}',$.Items[0].version, $.Items[0].context_value.reach_id)",
                            "Parameters": {
                                "index.$": "States.Format('{}',$.Items[0].context_index)"
                            }
                        },
                        "End": true
                    }
                }
            },
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "JSON"
                },
                "Parameters": {
                    "Bucket": "${prefix}-json",
                    "Key": "continent.json"
                }
            },
            "MaxConcurrency": 10,
            "Label": "priorsUnconstrained",
            "ItemBatcher": {
                "MaxInputBytesPerBatch": 131072,
                "MaxItemsPerBatch": 1
            },
            "Next": "FLPE"
        },
        "FLPE": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Hivdi",
                    "States": {
                        "Hivdi": {
                            "Type": "Map",
                            "ItemSelector": {
                                "ContextIndex.$": "$$.Map.Item.Index",
                                "ContextValue.$": "$$.Map.Item.Value"
                            },
                            "ItemProcessor": {
                                "ProcessorConfig": {
                                    "Mode": "DISTRIBUTED",
                                    "ExecutionType": "STANDARD"
                                },
                                "StartAt": "Batch SubmitJob",
                                "States": {
                                    "Batch SubmitJob": {
                                        "Type": "Task",
                                        "Resource": "arn:aws:states:::batch:submitJob.sync",
                                        "Parameters": {
                                            "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-hivdi",
                                            "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                            "PropagateTags": true,
                                            "ContainerOverrides": {
                                                "Command": [
                                                    "-i",
                                                    "Ref::index"
                                                ]
                                            },
                                            "JobName.$": "States.Format('confluence-hivdi-{}',$.Items[0].ContextValue.reach_id)",
                                            "Parameters": {
                                                "index.$": "States.Format('{}',$.Items[0].ContextIndex)"
                                            }
                                        },
                                        "End": true
                                    }
                                }
                            },
                            "ItemReader": {
                                "Resource": "arn:aws:states:::s3:getObject",
                                "ReaderConfig": {
                                    "InputType": "JSON"
                                },
                                "Parameters": {
                                    "Bucket": "${prefix}-json",
                                    "Key": "reaches.json"
                                }
                            },
                            "MaxConcurrency": 100,
                            "Label": "hivdi",
                            "ItemBatcher": {
                                "MaxInputBytesPerBatch": 131072,
                                "MaxItemsPerBatch": 1
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Metroman",
                    "States": {
                        "Metroman": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "OutputPath": "$",
                            "ResultPath": "$.metroman",
                            "Parameters": {
                                "JobName": "metroman",
                                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-metroman",
                                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                "PropagateTags": true,
                                "ArrayProperties": {
                                    "Size.$": "$.array_size.metrosets"
                                },
                                "ContainerOverrides": {
                                    "Command": [
                                        "metrosets.json",
                                        "-235",
                                        "-v"
                                    ]
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Momma",
                    "States": {
                        "Momma": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "OutputPath": "$",
                            "ResultPath": "$.momma",
                            "Parameters": {
                                "JobName": "momma",
                                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-momma",
                                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                "PropagateTags": true,
                                "ArrayProperties": {
                                    "Size.$": "$.array_size.reaches"
                                },
                                "ContainerOverrides": {
                                    "Command": [
                                        "reaches.json"
                                    ]
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Neobam",
                    "States": {
                        "Neobam": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "OutputPath": "$",
                            "ResultPath": "$.neobam",
                            "Parameters": {
                                "JobName": "neobam",
                                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-neobam",
                                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                "PropagateTags": true,
                                "ArrayProperties": {
                                    "Size.$": "$.array_size.reaches"
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Sad",
                    "States": {
                        "Sad": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "OutputPath": "$",
                            "ResultPath": "$.sad",
                            "Parameters": {
                                "JobName": "sad",
                                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-sad",
                                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                "PropagateTags": true,
                                "ArrayProperties": {
                                    "Size.$": "$.array_size.reaches"
                                },
                                "ContainerOverrides": {
                                    "Command": [
                                        "reaches.json"
                                    ]
                                }
                            },
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "Sic4dvar",
                    "States": {
                        "Sic4dvar": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::batch:submitJob.sync",
                            "OutputPath": "$",
                            "ResultPath": "$.sic4dvar",
                            "Parameters": {
                                "JobName": "sic4dvar",
                                "JobDefinition": "arn:aws:batch:${aws_region}:${account_id}:job-definition/${prefix}-sic4dvar",
                                "JobQueue": "arn:aws:batch:${aws_region}:${account_id}:job-queue/${prefix}-flpe",
                                "PropagateTags": true,
                                "ArrayProperties": {
                                    "Size.$": "$.array_size.sicsets"
                                },
                                "ContainerOverrides": {
                                    "Command": [
                                        "--json",
                                        "sicsets.json",
                                        "--constraint",
                                        "constrained"
                                    ]
                                }
                            },
                            "End": true
                        }
                    }
                }
            ],
            "Next": "Postdiagnostics FLPE"
        },
        "Successful Run": {
            "Type": "Succeed"
        }
    }
}